<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Model on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/model/</link>
    <description>Recent content in Model on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Jan 2015 13:00:37 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/model/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Unit Testing Model Layer with Core Data and Swift</title>
      <link>https://www.andrewcbancroft.com/2015/01/13/unit-testing-model-layer-core-data-swift/</link>
      <pubDate>Tue, 13 Jan 2015 13:00:37 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/2015/01/13/unit-testing-model-layer-core-data-swift/</guid>
      <description>Updated on November 19, 2015 &amp;#8211; Swift 2.0
As I approached testing my Core Data model, I have to admit I was apprehensive. How in the world was I going to write unit tests for my model layer that depended on a database. Past experience with trying to write tests with databases was painful. I feared the same would be the case with Core Data.
To my surprise, unit testing my Core Data model layer has been… well… amazing.</description>
    </item>
    
  </channel>
</rss>