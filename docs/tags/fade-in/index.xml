<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fade In on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/fade-in/</link>
    <description>Recent content in Fade In on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Feb 2016 19:07:27 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/fade-in/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fade Views In/Out with Fadeable – A Swift Protocol Extension</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/fade-views-inout-with-fadeable-a-swift-protocol-extension/</link>
      <pubDate>Mon, 22 Feb 2016 19:07:27 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/fade-views-inout-with-fadeable-a-swift-protocol-extension/</guid>
      <description>During the production of my Pluralsight course on Managing Xcode Project Dependencies with CocoaPods, I wanted to provide viewers of the course the opportunity to see how to create and deploy a simple library out to the CocoaPods Trunk.

Inspiration A simple idea came to mind: Create something that allows client developers of the pod to easily fade views in or out on any UIView instance. If you&amp;rsquo;ve read andrewcbancroft.</description>
    </item>
    
    <item>
      <title>Fade In / Out Animations as Class Extensions in Swift</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/fade-in-out-animations-as-class-extensions-with-swift/</link>
      <pubDate>Sun, 27 Jul 2014 20:13:53 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/fade-in-out-animations-as-class-extensions-with-swift/</guid>
      <description>Updated on December 6, 2016 – Xcode 8 &amp;amp; Swift 3.0
The question has been asked (and solved) on StackOverflow in Objective-C, but my aim in this post is to take the Objective-C implementation and leverage Swift extensions to make this job even easier to achieve and reuse.
Fade animations basically involve adjusting a UIView&amp;#8216;s alpha value from 1.0 to 0.0 (fade out) or 0.0 to 1.0 (fade in) over a specified duration using some kind of easing option (like starting fast, then slowing down at the end of the animation, or starting slow and speeding up at the end of the animation).</description>
    </item>
    
  </channel>
</rss>