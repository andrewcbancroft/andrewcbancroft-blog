<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mock on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/mock/</link>
    <description>Recent content in Mock on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Jul 2014 05:12:16 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/mock/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Create Mocks and Stubs in Swift</title>
      <link>https://www.andrewcbancroft.com/2014/07/15/how-to-create-mocks-and-stubs-in-swift/</link>
      <pubDate>Tue, 15 Jul 2014 05:12:16 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/2014/07/15/how-to-create-mocks-and-stubs-in-swift/</guid>
      <description>Without 100% support for a mocking framework like OCMock, I found myself needing to get creative when building&amp;nbsp;mock objects and method stubs in Swift unit tests. &amp;nbsp;The great thing about testing is that you&amp;#8217;re&amp;#8230;well&amp;#8230;&amp;nbsp;testing things out to see if they&amp;#8217;ll work, and I found a solution that I&amp;#8217;m pretty happy&amp;nbsp;with for now. &amp;nbsp;I&amp;#8217;m open to better ways, so leave a comment if you&amp;#8217;ve had good results using a different design!</description>
    </item>
    
  </channel>
</rss>