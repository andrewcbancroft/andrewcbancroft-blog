<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AppDelegate on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/appdelegate/</link>
    <description>Recent content in AppDelegate on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jun 2015 17:37:44 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/appdelegate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Access Sub-Controllers from a UINavigationController in Swift</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/access-sub-controllers-from-a-uinavigationcontroller-in-swift/</link>
      <pubDate>Tue, 02 Jun 2015 17:37:44 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/access-sub-controllers-from-a-uinavigationcontroller-in-swift/</guid>
      <description>The sequence of accessing a UINavigationController&#39;s first child from within the AppDelegate or within prepareForSegue(_:sender:) always gets me. Here are a few quick snippets to help you and I quickly get up and running when working with navigation controllers in our Swift applications:

AppDelegate Every iOS application has one root view controller that&amp;rsquo;s presented when the app finishes its launch process. Suppose we&amp;rsquo;re building a navigation controller-based app&amp;#8230; that is, we&amp;rsquo;re building an app where the first (root) view controller is a UINavigationController.</description>
    </item>
    
  </channel>
</rss>