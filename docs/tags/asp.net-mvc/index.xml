<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ASP.Net MVC on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/asp.net-mvc/</link>
    <description>Recent content in ASP.Net MVC on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Aug 2015 20:57:02 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/asp.net-mvc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Diagnosing “Restore failed” with ASP.NET 5 on Mac</title>
      <link>https://www.andrewcbancroft.com/blog/dot-net-development/diagnosing-restore-failed-with-asp-net-5-on-mac/</link>
      <pubDate>Sun, 09 Aug 2015 20:57:02 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/dot-net-development/diagnosing-restore-failed-with-asp-net-5-on-mac/</guid>
      <description>Following along with Steve Smith&amp;rsquo;s &amp;ldquo;Your First ASP.NET 5 Application on a Mac&amp;#8221;, I found myself frustrated that, despite all my efforts, the simple little sample project I was trying to get running just wouldn&amp;rsquo;t work due to a problem with restoring the project&amp;rsquo;s dependencies.

Retracing my steps I got ASP.NET installed on my Mac, and I even got a cool little template going using Yeoman.
I opened up my scaffolded project using Visual Studio Code, and began the dependency restore process.</description>
    </item>
    
    <item>
      <title>Up and Running with Unity IOC Container for ASP.Net MVC</title>
      <link>https://www.andrewcbancroft.com/blog/dot-net-development/up-and-running-with-unity-ioc-container-for-asp-net-mvc/</link>
      <pubDate>Mon, 27 Oct 2014 18:07:21 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/dot-net-development/up-and-running-with-unity-ioc-container-for-asp-net-mvc/</guid>
      <description>The process for creating an ASP.Net MVC web application that relies on the Unity Inversion of Control (IOC) container has gotten quite a bit more streamlined since I first started working with it.&amp;nbsp; However, since I don’t start brand new software projects often, it’s often the case that it takes me a few minutes to figure out which NuGet package to install to get things up and running.&amp;nbsp;
The following is a quick-reference for myself, and for anyone else who’s interested in getting up and running quickly with the Unity IOC container for an ASP.</description>
    </item>
    
  </channel>
</rss>