<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Constants on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/constants/</link>
    <description>Recent content in Constants on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Oct 2014 17:58:46 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/constants/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Swift Alternative to Objective-C Macros</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/swift-alternative-to-objective-c-macros/</link>
      <pubDate>Wed, 01 Oct 2014 17:58:46 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/swift-alternative-to-objective-c-macros/</guid>
      <description>I&amp;rsquo;ve previously written about using enumerations in Swift to encapsulate special values that could end up falling into the &amp;ldquo;magic string&amp;#8221; category if they were to simply be scattered in-line throughout your code. The primary example I proposed for such a &amp;ldquo;magic string&amp;#8221; replacement was Storyboard Segue Identifiers. These special identifiers have such a specific purpose that felt to me like a natural fit to create a Type in the form of an enumeration (which I called SegueIdentifier) to group them all together in one place so that I could easily find them and modify them, should I ever need to do so.</description>
    </item>
    
  </channel>
</rss>