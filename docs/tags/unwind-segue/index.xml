<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unwind Segue on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/unwind-segue/</link>
    <description>Recent content in Unwind Segue on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Dec 2015 18:22:55 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/unwind-segue/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Working with Unwind Segues Programmatically in Swift</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/ui-work/working-with-unwind-segues-programmatically-in-swift/</link>
      <pubDate>Fri, 18 Dec 2015 18:22:55 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/ui-work/working-with-unwind-segues-programmatically-in-swift/</guid>
      <description>Updated on September 20, 2016 â€“ Xcode 8 &amp;amp; Swift 3.0
Navigating between screens is a critical component to building iOS applications. The mechanism for navigation in Storyboard-based applications is the segue. Using segues, we can travel ahead to the next screen, which is extremely common. We can also travel backward in the screen &amp;ldquo;navigation stack&amp;#8221; by programming a special kind of segue called an unwind segue.
Embedding a view controller inside a navigation controller gives us some built-in forward and backward navigation, so you may be asking, &amp;ldquo;What&amp;rsquo;s the need for an unwind segue?</description>
    </item>
    
  </channel>
</rss>