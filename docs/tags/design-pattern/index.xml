<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design Pattern on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/design-pattern/</link>
    <description>Recent content in Design Pattern on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Apr 2015 01:43:55 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How Delegation Works – A Swift Developer’s Guide</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/patterns-and-practices/how-delegation-works-a-swift-developer-guide/</link>
      <pubDate>Thu, 09 Apr 2015 01:43:55 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/patterns-and-practices/how-delegation-works-a-swift-developer-guide/</guid>
      <description>Updated on October 11, 2016 – Swift 3.0
Delegation can be a difficult topic to wrap your head around. I found it easiest to break up posts on the topic to help readers who are new to the pattern grasp the concepts a little better. First, I analyzed what delegation is in &amp;ldquo;What is Delegation – A Swift Developer&amp;rsquo;s Guide&amp;#8221;. If you&amp;rsquo;re looking for the &amp;ldquo;what is it?&amp;#8221; behind the &amp;ldquo;how does it work?</description>
    </item>
    
  </channel>
</rss>