<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UITableViewCell on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/uitableviewcell/</link>
    <description>Recent content in UITableViewCell on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Feb 2015 13:00:50 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/uitableviewcell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Custom UITableViewCell for Text Input in Swift</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/ui-work/custom-uitableviewcell-text-input-swift/</link>
      <pubDate>Thu, 12 Feb 2015 13:00:50 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/ui-work/custom-uitableviewcell-text-input-swift/</guid>
      <description>The need to collect data via text input is a common in many applications. This walk-through showcases how to create a custom UITableViewCell for accepting text input within a UITableView.

Table Views for Data Entry? Table views provide nice, built-in styles that present a form-like view for collecting data from your users. They also have inherent scrolling capabilities. Finally, there is some handy keyboard handling, such as auto-scrolling to avoid covering up a data entry cell, or hiding the keyboard when the user scrolls the Table View.</description>
    </item>
    
  </channel>
</rss>