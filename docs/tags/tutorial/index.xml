<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/tutorial/</link>
    <description>Recent content in Tutorial on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 May 2015 20:37:52 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Beginner’s Guide to Event Kit in Swift – Requesting Permission</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/eventkit/beginners-guide-to-eventkit-in-swift-requesting-permission/</link>
      <pubDate>Thu, 14 May 2015 20:37:52 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/eventkit/beginners-guide-to-eventkit-in-swift-requesting-permission/</guid>
      <description>Updated on October 26, 2016 – Swift 3.0
EventKit provides a set of classes for accessing and manipulating a user&amp;rsquo;s calendar events and reminders. In the tutorial that follows, my goal is to walk you through the first steps of setting up an app that utilizes EventKit. I will demonstrate how to request permission to the user&amp;rsquo;s calendar and show a couple of examples for how to handle the user&amp;rsquo;s response (for when they grant access, or deny it).</description>
    </item>
    
    <item>
      <title>Fundamentals of NSNotificationCenter in Swift</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/patterns-and-practices/fundamentals-of-nsnotificationcenter-in-swift/</link>
      <pubDate>Wed, 08 Oct 2014 18:27:47 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/patterns-and-practices/fundamentals-of-nsnotificationcenter-in-swift/</guid>
      <description>Updated on September 19, 2016 – Xcode 8 &amp;amp; Swift 3.0
The goal of this post is to help you grasp the fundamentals of using NSNotificationCenter in your Swift iOS app. The topic isn&amp;rsquo;t necessarily new, and there&amp;rsquo;s no difference except syntax between Objective-C and Swift implementations involving NSNotificationCenter. Even still, I&amp;rsquo;m hoping to add to the understanding of this useful tool by giving a fully-working example on GitHub (Swift 2.</description>
    </item>
    
    <item>
      <title>Create Sound Clips from iTunes</title>
      <link>https://www.andrewcbancroft.com/blog/musings/create-sound-clips-from-itunes/</link>
      <pubDate>Tue, 19 Jun 2012 00:48:38 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/musings/create-sound-clips-from-itunes/</guid>
      <description>Open iTunes. (optional) Import any songs you&amp;rsquo;d like to make clips for. Select (click) the song that you&amp;rsquo;d like a sound clip for so that it&amp;rsquo;s the only one selected. Right-click that song and select &amp;ldquo;Get Info&amp;#8221;. A window will appear – Click &amp;ldquo;Options&amp;#8221; to access the screen to set your start and stop times. Check the boxes next to &amp;ldquo;Start Time&amp;#8221; and &amp;ldquo;Stop Time&amp;#8221;. Enter a start time in the text box next to &amp;ldquo;Start Time&amp;#8221;.</description>
    </item>
    
  </channel>
</rss>