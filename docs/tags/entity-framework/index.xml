<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Entity Framework on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/entity-framework/</link>
    <description>Recent content in Entity Framework on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Mar 2017 20:57:27 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/entity-framework/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Entity Framework Tip – Specifying Decimal Precision</title>
      <link>https://www.andrewcbancroft.com/2017/03/29/entity-framework-tip-specifying-decimal-precision/</link>
      <pubDate>Wed, 29 Mar 2017 20:57:27 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/2017/03/29/entity-framework-tip-specifying-decimal-precision/</guid>
      <description>By default, Entity Framework takes the .Net decimal Type and maps it to SQL Server&amp;#8217;s decimal(18,2) data type.
If you&amp;#8217;ve got a property on an Entity that is of Type decimal, but down in your database, you&amp;#8217;re allowing for greater precision than 2 decimal places (scale is actually the proper term for the number of places after the decimal), you need to tell Entity Framework this information. Otherwise, decimal values that you save to your database will be truncated at the default 2 decimal places.</description>
    </item>
    
    <item>
      <title>Solving ‘Spatial types and functions are not available’ with Entity Framework</title>
      <link>https://www.andrewcbancroft.com/2017/03/27/solving-spatial-types-and-functions-are-not-available-with-entity-framework/</link>
      <pubDate>Mon, 27 Mar 2017 16:38:33 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/2017/03/27/solving-spatial-types-and-functions-are-not-available-with-entity-framework/</guid>
      <description>Using SQL Server&amp;#8217;s Geospatial features with Entity Framework is awesome. I was crusing along just fine with using DbGeography for an ASP.Net application I&amp;#8217;m working on&amp;#8230; Right up until I deployed to the server. Yep. It worked on my machine, but alas, I was hitting a runtime exception on my test server.
This was the exception:
 Spatial types and functions are not available for this provider because the assembly &amp;#8216;Microsoft.</description>
    </item>
    
    <item>
      <title>SQL Sever Synonyms, Entity Framework, &amp; Integrated Security</title>
      <link>https://www.andrewcbancroft.com/2015/05/01/using-sql-sever-synonyms-entity-framework-integrated-security/</link>
      <pubDate>Fri, 01 May 2015 17:44:31 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/2015/05/01/using-sql-sever-synonyms-entity-framework-integrated-security/</guid>
      <description>Jump to&amp;#8230;   Scenario   Login failed for user &amp;#8216;NT AUTHORITY\ANONYMOUS LOGON&amp;#8217;   Resolving the error    Creating the view   Granting permissions  
&amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#share&amp;quot;&amp;gt;Was this article helpful? Please share!&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;   

Scenario This may be an edge case, but I spent enough time (a couple of days) spinning on this that I thought it warranted a signpost on the Internet.</description>
    </item>
    
  </channel>
</rss>