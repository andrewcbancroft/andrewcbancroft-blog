<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Complex Macro on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/complex-macro/</link>
    <description>Recent content in Complex Macro on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Jan 2015 13:00:51 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/complex-macro/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Converting Complex Objective-C Macros to Swift Functions</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/patterns-and-practices/converting-complex-objective-c-macros-swift-functions/</link>
      <pubDate>Thu, 29 Jan 2015 13:00:51 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/patterns-and-practices/converting-complex-objective-c-macros-swift-functions/</guid>
      <description>The question of how to convert #define macros from Objective-C to Swift is explained fairly simply in the Apple developer documentation on the subject. For simple macros, it&amp;rsquo;s a matter of rewriting them as global constants. In fact, if you&amp;rsquo;re using the hybrid Objective-C &amp;#8212; Swift approach to writing your app, Swift sees those simple macros and automatically makes them available to your Swift code. I also gave some tips on the alternative to Objective-C macros a while back.</description>
    </item>
    
  </channel>
</rss>