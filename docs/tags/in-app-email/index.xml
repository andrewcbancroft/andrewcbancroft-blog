<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>In-App Email on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/tags/in-app-email/</link>
    <description>Recent content in In-App Email on Andrew Bancroft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Aug 2014 03:48:30 +0000</lastBuildDate>
    
	<atom:link href="https://www.andrewcbancroft.com/tags/in-app-email/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Send Email In-App – Using MFMailComposeViewController with Swift</title>
      <link>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/send-email-in-app-using-mfmailcomposeviewcontroller-with-swift/</link>
      <pubDate>Tue, 26 Aug 2014 03:48:30 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/blog/ios-development/swift-how-tos/send-email-in-app-using-mfmailcomposeviewcontroller-with-swift/</guid>
      <description>Updated on October 11, 2016 – Swift 3.0
In this writing, I want explore how to use MFMailComposeViewController with Swift to send e-mails within your app as a walkthrough. My focus here is &amp;ldquo;quick and dirty&amp;#8221; pragmatism, so that we can easily see what the inter-working components of MFMailComposeViewController are. That being said, here&amp;rsquo;s an important disclaimer – I&amp;rsquo;m going to overload the View Controller&amp;rsquo;s responsibilities in the examples to follow.</description>
    </item>
    
  </channel>
</rss>