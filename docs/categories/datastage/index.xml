<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DataStage on Andrew Bancroft</title>
    <link>https://www.andrewcbancroft.com/categories/datastage/</link>
    <description>Recent content about iOS development with Swift in DataStage  from Andrew Bancroft.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Apr 2013 14:15:54 +0000</lastBuildDate>
    
        <atom:link href="https://www.andrewcbancroft.com/categories/datastage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>“Unexpected System Error” in DataStage Sequence Job</title>
      <link>https://www.andrewcbancroft.com/2013/04/16/unexpected-system-error-in-datastage-sequence-job/</link>
      <pubDate>Tue, 16 Apr 2013 14:15:54 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/2013/04/16/unexpected-system-error-in-datastage-sequence-job/</guid>
      <description>&lt;p&gt;Today I was running into a mysterious error in DataStage as I was running a sequence job.  Things seemed to be going well until one of my Fact jobs at the end of the sequence reported “Aborted” in DataStage Director.  Looking into the log for this job revealed a rather vague error message:&lt;/p&gt;
&lt;p&gt;[StageName] DB2 function SQLFetch failed:  SQLSTATE = HY000: Native Error Code = -1,042: Msg = [IBM][CLI Driver][DB2/LINUXX8664] SQL1042C  An unexpected system error occurred.  SQLSTATE=58004 (CC_DB2Connection::queryServerHostName, file CC_DB2Connection.cpp, line 3,256)&lt;/p&gt;
&lt;p&gt;What’s strange is that the job, when re-compiled and run on its own, executes without error.  So it only fails when its run in the context of the sequence job.&lt;/p&gt;
&lt;p&gt;To fix the issue, I simply rearranged the order of the sequence at the end.  Here is a before and after look at the sequence:&lt;/p&gt;
&lt;h3 id=&#34;before&#34;&gt;Before:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/04/image.png&#34;&gt;&lt;img title=&#34;image&#34; style=&#34;border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px&#34; border=&#34;0&#34; alt=&#34;image&#34; src=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/04/image_thumb.png&#34; width=&#34;515&#34; height=&#34;496&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;after&#34;&gt;After:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/04/image1.png&#34;&gt;&lt;img title=&#34;image&#34; style=&#34;border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px&#34; border=&#34;0&#34; alt=&#34;image&#34; src=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/04/image_thumb1.png&#34; width=&#34;609&#34; height=&#34;208&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The sequence job runs every job now without error.  Now I only wish I knew &lt;em&gt;why&lt;/em&gt; this works – perhaps it’s an issue with server resources getting tied up if both Fact jobs are running at the same time?  I’ve decided to go with the above as my solution and move on, since neither Fact job takes an enormous amount of time to run.  Hopefully this solution will work for others as well!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DataStage Range Lookup Failure – What Gives?</title>
      <link>https://www.andrewcbancroft.com/2013/03/25/datastage-range-lookup-failure-what-gives/</link>
      <pubDate>Mon, 25 Mar 2013 17:52:13 +0000</pubDate>
      
      <guid>https://www.andrewcbancroft.com/2013/03/25/datastage-range-lookup-failure-what-gives/</guid>
      <description>&lt;p&gt;I just spent the majority of my morning trying to figure out why in the world my range lookup kept failing.  Hopefully this will save you some time in troubleshooting &lt;em&gt;your&lt;/em&gt; range lookup failures.  To cut right to the chase, &lt;strong&gt;my resolution involved &lt;em&gt;sorting&lt;/em&gt; my reference source prior to doing the lookup&lt;/strong&gt;.  Adding a sort stage with the appropriate sort keys prior to doing the lookup solved my problem.  I probably learned this in a training at some point, but I just didn’t retain it.  So I learned it again the hard way.&lt;/p&gt;
&lt;p&gt;For those who’d like to see a bit more of the details involved, feel free to have a look below.&lt;/p&gt;
&lt;h3 id=&#34;scenario&#34;&gt;Scenario:&lt;/h3&gt;
&lt;p&gt;I have a list of funding transactions in my data pipeline that lack some information, namely, the student’s major at the time he/she was funded.  They key phrase there is “&lt;em&gt;at the time he/she was funded”.&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;To assist in supplementing my fact record (the funding transaction) with this student demographic information, I have constructed a snapshot table in the data warehouse that captures a student’s major as a sort of “slowly changing dimension”.  Each time a change in the student’s major is detected, new records are inserted and effective and expiration dates are adjusted.  I’d like to supplement my funding record with this student major information by doing a lookup.  Here is the information I have to work with, just to be clear:&lt;/p&gt;
&lt;p&gt;My source data pipeline starts with my funding transactions.  It contains&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Student ID (Key)
&lt;ul&gt;
&lt;li&gt;Transaction Date (will help me with my lookup)
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Other columns that aren’t relevant to this particular task&lt;/ul&gt;
I also have a slowly changing dimension that tracks a historical record of each student’s major for various time intervals.  It contains&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Student ID (Key)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Effective Date of the student’s major (will help with lookup)
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Expiration Date of the student’s major (will help with lookup)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Student’s major (the information I want to use to supplement my fact row)&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;range-lookup-my-failing-setup&#34;&gt;Range Lookup (My [failing] Setup):&lt;/h3&gt;
&lt;p&gt;To accomplish my goal of supplementing the fact record with the student’s major, I needed to do a range lookup.  Below are sample screenshots of how I was attempting to set things up:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;View of the job design surface:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image9.png&#34;&gt;&lt;img title=&#34;image&#34; style=&#34;border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px&#34; border=&#34;0&#34; alt=&#34;image&#34; src=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image_thumb9.png&#34; width=&#34;523&#34; height=&#34;478&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;View of Lookup Stage:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image10.png&#34;&gt;&lt;img title=&#34;image&#34; style=&#34;border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px&#34; border=&#34;0&#34; alt=&#34;image&#34; src=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image_thumb10.png&#34; width=&#34;702&#34; height=&#34;326&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Notice that I use StudentID as a key so that I match the funding row to a particular student.  Now, to get his/her major at the time they were funded, I do a range lookup on the DateFunded column…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;View of Range Lookup on DateFunded:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image11.png&#34;&gt;&lt;img title=&#34;image&#34; style=&#34;border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px&#34; border=&#34;0&#34; alt=&#34;image&#34; src=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image_thumb11.png&#34; width=&#34;725&#34; height=&#34;517&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After compiling the job and running it, I would receive this error message: &lt;/p&gt;
&lt;p&gt;Lookup_StudentFieldOfStudy,0: Job aborting due to &lt;strong&gt;lookup failure&lt;/strong&gt; on link: List_StudentFieldOfStudy&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image12.png&#34;&gt;&lt;img title=&#34;image&#34; style=&#34;border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px&#34; border=&#34;0&#34; alt=&#34;image&#34; src=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image_thumb12.png&#34; width=&#34;725&#34; height=&#34;121&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem-solved&#34;&gt;Problem Solved:&lt;/h3&gt;
&lt;p&gt;As stated in the introduction, to fix this problem, I simply added a sort stage prior to the lookup stage on the link serving as my reference (that is, on the link containing the value I’m trying to look up, which in my case was the student’s major/field of study).  Here are some screen shots of how my job looked after I fixed it:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;View of the job design surface:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image13.png&#34;&gt;&lt;img title=&#34;image&#34; style=&#34;border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px&#34; border=&#34;0&#34; alt=&#34;image&#34; src=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/image_thumb13.png&#34; width=&#34;691&#34; height=&#34;462&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;View of Sort Stage:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/SNAGHTML100fd47.png&#34;&gt;&lt;img title=&#34;SNAGHTML100fd47&#34; style=&#34;border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px&#34; border=&#34;0&#34; alt=&#34;SNAGHTML100fd47&#34; src=&#34;http://www.andrewcbancroft.com/wp-content/uploads/2013/03/SNAGHTML100fd47_thumb.png&#34; width=&#34;517&#34; height=&#34;397&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An important note about the sort stage.  I needed to include &lt;strong&gt;two sort keys&lt;/strong&gt; – one to sort the students, and another to sort the effective dates of each student’s major(s).&lt;/p&gt;
&lt;p&gt;Everything else in the job remained exactly the same.  The results were a successfully running job with no lookup failures.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>